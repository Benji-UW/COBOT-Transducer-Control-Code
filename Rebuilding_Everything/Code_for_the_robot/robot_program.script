# This code is meant to be run once the socket connection has been made.

global i = 0
global port_name = "data_port"
global message_state = "No message"
global message = ""
global latest_loop = 0
global current_origin = get_actual_tcp_pose()

while True:
    i = i + 1
    global string_from_server = socket_read_string(port_name, timeout=0.5)
    if(string_from_server != ""):
        message_state = "recieved a message!"
        latest_loop = i
        message = string_from_server
        textmsg("Recieved the following: " + string_from_server)

        if(string_from_server == "testing IO"):
            socket_send_string("RSM:IO is tested", port_name)
        elif(string_from_server == "set_origin"):
            current_origin = get_actual_tcp_pose()
        elif(string_from_server == "test_wrench_trans"):
            my_pose_translate(current_origin, p[0,0,0,1,1,0], 0.5, 2))
        elif(string_from_server == "Transmit position"):
            current_pos = get_actual_tcp_pose()
            global to_send = str_cat("RSM:",current_pos)
            socket_send_string(to_send, port_name)
        else:
            socket_send_string("RSM: recieved unrecognized state request")
        end

    else:
        message_state = "message was blank!"
    end
    socket_set_var("loops", i, port_name)
    socket_send_string("I am alive", port_name)
end

def my_pose_translate(pos1, rotation_vector,vel, acc):
    global vec=wrench_trans(pos1, rotation_vector)
    speedl(vec,1)

# TODO: 
# - Test that I can recieve and process data on the robot from the computer
# - Test that I can send data from the robot and process it on the computer
